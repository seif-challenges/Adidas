# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
          
      - name: Build all artifacts
        id: buildAllApks
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: assembleDebug
          
      - name: Run Kotlin Linter
        run: ./gradlew ktlint

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest
        
      - name: Sign artifact
        id: signArtifact
        uses: r0adkll/sign-android-release@v1.0.1
        with:
          releaseDirectory: app/build/outputs/apk/debug
          alias: ${{ secrets.KEY_ALIAS }}
          signingKeyBase64: ${{ secrets.DEBUG_KEY_BASE64 }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          
      - id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          
      - name: Create release and upload apk
        uses: underwindfall/create-release-with-debugapk@v2.0.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: app_adidas_debug_${{ steps.release.outputs.version }}.apk
          asset_content_type: application/zip
